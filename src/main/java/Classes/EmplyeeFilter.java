package Classes;

import java.io.IOException;

import jakarta.ws.rs.container.ContainerRequestContext;
import jakarta.ws.rs.container.ContainerRequestFilter;
import jakarta.ws.rs.core.Response;
import jakarta.ws.rs.ext.Provider;

@Provider
@EmployeeAnnotion
public class EmplyeeFilter implements ContainerRequestFilter {
	private Services service = new Services();
	@Override
    public void filter(ContainerRequestContext crc) throws IOException {
		 System.out.println("üîç V√©rification du filtre EmployeeFilter...");
        // R√©cup√©rer l'ID de l'utilisateur connect√© depuis un en-t√™te HTTP
        String userId = crc.getHeaderString("UserId");

        // V√©rifier si l'ID est valide et r√©cup√©rer l'employ√© associ√©
        Employee employee = service.getEmployeeById(userId);
        if (employee == null || !"EMPLOYE_ORDINAIRE".equalsIgnoreCase( String.valueOf(employee.getRole()))) {
            // Bloquer l'acc√®s si l'employ√© n'existe pas ou n'est pas admin
            crc.abortWith(Response
                .status(Response.Status.FORBIDDEN)
                .entity("Acc√®s refus√© ")
                .build());
        }
    }

}
